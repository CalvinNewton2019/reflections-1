How did viewing a diff between two versions of a file help you see the bug that was introduced? It was easy to compare the changes with the symbols -- and ++ rather than inspecting both codes line by line.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term? This would make you a more efficient programmer because you would have less time scrambling and searching for what you need to find.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does? The pros are having the power to choose what you want saved or not. It provides a lot of flexibility. The cons are not knowing when to actually save your code.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? I think it is because certain programs have interconnected files. And a VCS like git knows that and realizes that commiting all the files at once is because they are all connected to each other.

How can you use the commands git log and git diff to view the history of files? you can first use git log to list all the commits you made. Then you can take two commits and compare what you added/deleted

How might using version control make you more confident to make changes that could break something? This allows you to not be afraid to make mistakes because reverting back to your original code is quick and easy. It is easy to launch your app to see what went wrong and/or what was working at the time.

Now that you have your workspace set up, what do you want to try using Git for? I want to try to start a project that will require me to check back on old commits. I think this will help cement the concepts well.